<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace="fun.qxfly.mapper.Article.ArticleCommentMapper">
    <!--分页获取文章评论-->
    <resultMap id="comment" type="fun.qxfly.common.domain.entity.Comment">
        <id column="id" property="id"/>
        <result column="articleId" property="articleId"/>
        <result column="content" property="content"/>
        <result column="parentCommentId" property="parentCommentId"/>
        <result column="likeCount" property="likeCount"/>
        <result column="createTime" property="createTime"/>
        <result column="toUsername" property="toUsername"/>
        <result column="toUserId" property="toUserId"/>
        <result column="verify" property="verify"/>
        <association property="user" javaType="fun.qxfly.common.domain.entity.User">
            <id column="userId" property="id"/>
            <result column="username" property="username"/>
            <result column="avatar" property="avatar"/>
        </association>
    </resultMap>
    <select id="getArticleCommentsByPage" resultMap="comment">
        select c.*,u.avatar from comment c join `user` u on u.id = c.userId where c.articleId = #{id} and c.verify = 3
        and parentCommentId = 0
        <if test="sort == 'new'">
            order by c.createTime desc
        </if>
        <if test="sort == 'hot'">
            order by c.likes desc
        </if>
        limit #{start}, #{pageSize}
    </select>
    <select id="getChildCommentByCommentId" resultMap="comment">
        select c.*,u.avatar from comment c join `user` u on u.id = c.userId where parentCommentId = #{id} and c.verify = 3 order by c.createTime ASC
    </select>
</mapper>