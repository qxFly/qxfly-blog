<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>fun.qxfly</groupId>
    <artifactId>qxfly-blog</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <name>qxfly-blog</name>
    <description>qxfly-blog</description>
    <modules>
        <module>qxfly-framework</module>
        <module>qxfly-common</module>
        <module>qxfly-quartz</module>
        <module>qxfly-springboot</module>
    </modules>
    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>3.1.5</spring-boot.version>
        <!-- 项目模块版本 -->
        <revision>1.0.2</revision><!--父模块-->
        <qxfly.springboot.version>1.0.2</qxfly.springboot.version>
        <qxfly.framework.version>1.0.1</qxfly.framework.version>
        <qxfly.common.version>1.0.1</qxfly.common.version>
        <qxfly.quartz.version>1.0.1</qxfly.quartz.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>fun.qxfly</groupId>
                <artifactId>qxfly-springboot</artifactId>
                <version>${qxfly.springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>fun.qxfly</groupId>
                <artifactId>qxfly-framework</artifactId>
                <version>${qxfly.framework.version}</version>
            </dependency>
            <dependency>
                <groupId>fun.qxfly</groupId>
                <artifactId>qxfly-common</artifactId>
                <version>${qxfly.common.version}</version>
            </dependency>
            <dependency>
                <groupId>fun.qxfly</groupId>
                <artifactId>qxfly-quartz</artifactId>
                <version>${qxfly.quartz.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>3.2.1</version>
        </dependency>

        <!--数据库-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-3-starter</artifactId>
            <version>1.2.23</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.33</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>2.1.0</version>
        </dependency>
        <!--jwt-->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.1</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <!--工具类-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>2.0.32</version>
        </dependency>
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
            <version>4.5.0</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.15</version>
        </dependency>

        <!--测试相关-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>spring-test</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-boot-test</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter-test</artifactId>
            <version>3.0.2</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>mybatis-spring-boot-test-autoconfigure</artifactId>
                    <groupId>org.mybatis.spring.boot</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-boot-starter-test</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
<!--            &lt;!&ndash; 此插件必须放在父 POM 中  &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-assembly-plugin</artifactId>-->
<!--                <version>3.6.0</version>-->
<!--                <executions>-->
<!--                    &lt;!&ndash;-->
<!--                    执行本插件的方法为，在主目录下执行如下命令：-->
<!--                    mvn package assembly:single-->

<!--                    对于 IntelliJ IDEA，生成的 JAR 包位于每个模块下的文件夹 target-->
<!--                    &ndash;&gt;-->
<!--                    <execution>-->
<!--                        <id>make-assembly</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            &lt;!&ndash; 此处 IntelliJ IDEA 可能会报红，这是正常现象  &ndash;&gt;-->
<!--                            <goal>single</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifest>-->
<!--                            &lt;!&ndash; 配置程序运行入口所在的类 &ndash;&gt;-->
<!--                            <mainClass>fun.qxfly.QxflySpringbootApplication</mainClass>-->
<!--                        </manifest>-->
<!--                    </archive>-->
<!--                    &lt;!&ndash; 设置 JAR 包输出目录 &ndash;&gt;-->
<!--                    <outputDirectory>${project.build.directory}/#maven-assembly-plugin</outputDirectory>-->
<!--                    &lt;!&ndash; 设置打包后的 JAR 包的目录结构为默认 &ndash;&gt;-->
<!--                    <descriptorRefs>-->
<!--                        <descriptorRef>jar-with-dependencies</descriptorRef>-->
<!--                    </descriptorRefs>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>
